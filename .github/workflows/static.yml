# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Check directory structure
        id: check-dirs
        run: |
          echo "Repository contents:"
          ls -la
          
          # Check if client directory exists
          if [ -d "client" ]; then
            echo "client_exists=true" >> $GITHUB_OUTPUT
            echo "Client directory found. Will build from client folder."
          elif [ -d "src" ] && [ -f "package.json" ]; then
            echo "client_exists=false" >> $GITHUB_OUTPUT
            echo "No client directory, but found React app at root level."
          else
            echo "::error::No valid React app structure found"
            exit 1
          fi
      
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ${{ steps.check-dirs.outputs.client_exists == 'true' && 'client/package-lock.json' || 'package-lock.json' }}
      
      - name: Install dependencies (client folder)
        if: steps.check-dirs.outputs.client_exists == 'true'
        run: |
          cd client
          npm ci
      
      - name: Install dependencies (root folder)
        if: steps.check-dirs.outputs.client_exists != 'true'
        run: npm ci
      
      - name: Build (client folder)
        if: steps.check-dirs.outputs.client_exists == 'true'
        run: |
          cd client
          npm run build
      
      - name: Build (root folder)
        if: steps.check-dirs.outputs.client_exists != 'true'
        run: npm run build
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.check-dirs.outputs.client_exists == 'true' && './client/build' || './build' }}
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  